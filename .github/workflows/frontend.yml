name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Clona o repositório
      - name: Checkout do repositório
        uses: actions/checkout@v3

      # Etapa 2: Instala o Node.js na versão 20
      - name: Configura Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Etapa 3: Instala o PNPM globalmente
      - name: Instala o PNPM
        run: npm install -g pnpm@10.7.1

      # Etapa 4: Exibe a versão do PNPM instalada
      - name: Verifica versão do PNPM
        run: pnpm -v

      # Etapa 5: Instala dependências com lockfile travado
      - name: Instala dependências
        run: pnpm install --frozen-lockfile

      # Etapa 6: Verifica formatação do código com Prettier
      - name: Valida formatação (Prettier)
        run: pnpm exec prettier --check .

      # Etapa 7: Roda o linter (ESLint)
      - name: Valida padrões de código (ESLint)
        run: pnpm lint

      # Etapa 8: Executa os testes com Jest
      - name: Executa testes automatizados
        run: pnpm test

      # Etapa 9: Gera o build da aplicação Next.js
      - name: Realiza build do frontend
        run: pnpm run build
        env:
          NODE_ENV: production
          API_INTERNAL_URL: ${{ secrets.API_INTERNAL_URL }}

      # Etapa 10: Realiza o deploy para a Vercel (apenas no push para main)
      - name: Realiza deploy na Vercel
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          github-comment: false
